name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Installer Safety
        run: |
          pip install safety

      - name: Vérifier les dépendances pour des vulnérabilités
        run: |
          safety check --file=requirements.txt --ignore 1234  # Optionnel, pour ignorer certaines vulnérabilités
        continue-on-error: true  # Cela permet de continuer même si Safety détecte des vulnérabilités

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mon_projet:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/mon_projet:latest

  sonarcloud:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Installer et analyser avec SonarCloud
        run: |
          curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli.zip
          export PATH=$PWD/sonar-scanner-5.0.1.3006-linux/bin:$PATH
          sonar-scanner \
            -Dsonar.organization=Maneo159 \
            -Dsonar.projectKey=pythonCICD \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build, sonarcloud]
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Deploy to Server
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/mon_projet:latest
          docker stop mon_projet || true
          docker rm mon_projet || true
          docker run -d -p 5000:5000 --name mon_projet ${{ secrets.DOCKER_USERNAME }}/mon_projet:latest
