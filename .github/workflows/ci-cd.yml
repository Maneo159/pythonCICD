name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Déclenche le workflow sur les pushs dans main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout du code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build et Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/mon_projet:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/mon_projet:latest


  sonarcloud:
    runs-on: ubuntu-latest
    needs: build  # SonarCloud démarre après le build
    steps:
    - name: Checkout du code
      uses: actions/checkout@v3

    - name: Install SonarScanner
      run: |
        # Télécharger et décompresser le scanner
        curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
        unzip sonar-scanner-cli.zip
        # Ajouter temporairement le binaire au PATH
        export PATH=$PWD/sonar-scanner-5.0.1.3006-linux/bin:$PATH
        # Vérification du répertoire où se trouve sonar-scanner
        echo "Contenu du répertoire où le sonar-scanner a été installé :"
        ls -al $PWD/sonar-scanner-5.0.1.3006-linux/bin
        # Vérification du PATH
        echo "Vérification du PATH : $PATH"
        which sonar-scanner || exit 1  # Vérifie si le binaire est bien trouvé
        sonar-scanner --version || exit 1  # Affiche la version du scanner

    - name: Analyse SonarCloud
      run: |
        echo "Lancement de l'analyse SonarCloud..."
        export PATH=$PWD/sonar-scanner-5.0.1.3006-linux/bin:$PATH  # Ajouter temporairement à chaque étape
        sonar-scanner \
          -Dsonar.organization=maneo159 \
          -Dsonar.projectKey=Maneo159_pythonCICD \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io\
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
  deploy:
    runs-on: ubuntu-latest
    needs: [build, sonarcloud]  # Déploiement après SonarCloud
    steps:
    - name: Checkout du code
      uses: actions/checkout@v3

    - name: Deploy to Server
      run: |
        docker pull ${{ secrets.DOCKER_USERNAME }}/mon_projet:latest
        docker stop mon_projet || true
        docker rm mon_projet || true
        docker run -d -p 5000:5000 --name mon_projet ${{ secrets.DOCKER_USERNAME }}/mon_projet:latest
